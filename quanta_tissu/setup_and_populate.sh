#!/bin/bash

# A script to set up the TissDB instance, and populate it with
# text generated by the Tiss language model.

# Exit immediately if a command exits with a non-zero status.
set -e

# --- 1. Build the TissDB server ---
echo "--- Building TissDB server... ---"
(cd tissdb && make)
echo "--- Build complete. ---"

# --- 2. Start the TissDB server in the background ---
echo "--- Starting TissDB server... ---"
./tissdb/tissdb &
# Save the Process ID (PID) of the last background command
TISSDB_PID=$!
echo "--- TissDB server started with PID: $TISSDB_PID ---"

# --- 3. Wait for the server to initialize ---
# Give the server a few seconds to start up before we send requests.
sleep 3

# --- 4. Create a new collection for our generated text ---
echo "--- Creating collection 'tiss_generations'... ---"
curl -s -X PUT http://localhost:8080/tiss_generations
echo -e "\n--- Collection created. ---"

# --- 5. Generate text and populate the collection ---
echo "--- Generating and populating 5 documents... ---"
for i in {1..5}
do
  echo "Generating document $i..."
  # Call the python script to generate 8 tokens starting with "hello"
  GENERATED_TEXT=$(python3 quanta_tissu/scripts/generate_text.py --prompt hello --length 8)

  # Escape the text for JSON
  JSON_PAYLOAD=$(printf '{"content": "%s"}' "$GENERATED_TEXT")

  # POST the generated text to the collection
  curl -s -X POST -H "Content-Type: application/json" \
    --data "$JSON_PAYLOAD" \
    http://localhost:8080/tiss_generations
  echo "" # for a newline
done
echo "--- Population complete. ---"

# --- 6. Verify the data was inserted ---
echo "--- Verifying inserted data... ---"
echo "Querying for all documents in 'tiss_generations':"
curl -s -X POST -H "Content-Type: application/json" \
  --data '{"query": "SELECT * FROM tiss_generations"}' \
  http://localhost:8080/tiss_generations/_query
echo -e "\n--- Verification complete. ---"


# --- 7. Clean up by stopping the server ---
echo "--- Shutting down TissDB server (PID: $TISSDB_PID)... ---"
kill $TISSDB_PID
# Wait a moment to ensure the process has been terminated
sleep 1
echo "--- Shutdown complete. ---"

echo "--- Script finished successfully! ---"
